{
  "hash": "cf3c6da8c22669f49af31e18ca641de8",
  "result": {
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    toc: true\n    code-overflow: wrap\n---\n\n\n![](images/census%20factors.png)\n\n**This code: creates a table of dispensary density by socioeconomic factors**\n\n1.  matches zip codes to census geocodes\\\n2.  connects to census API\\\n3.  retrieves demographic population data\\\n4.  calculates poverty, race, and employment rates\\\n5.  matches the statistics above with year-over-year changes in dispensaries\\\n6.  creates a table showing dispensary YOY growth by socioeconomic quartiles\\\n\nThis section of my methodology was the most exciting for me, yet it was also where I recognized the need to adapt my approach. My first limitation was the challenge of matching dispensary locations to their corresponding census tracts. To achieve this, I would need to obtain each location's physical address, which was not provided by Colorado.Gov's dispensary archive. While this information can be accessed for a price through vendors or tediously scraping the web, for the sake of time and sanity, proceeding with county-level data was my best option for completing this project.\n\nNonetheless, the TIGRIS package's ability to create maps at the census tract level remains a potent instrument in an analyst's arsenal. Although the tract level identifiers are not utilized beyond this point, I have included it as a reference for future projects and as part of my Replicating NIMBY journey. Due to the differences in methodology, my figures can not align flawlessly; however, examining the overall trends for congruence remains a worthwhile endeavor.\n\n### load packages\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.2.1     ✔ dplyr   1.1.1\n✔ tidyr   1.2.1     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::as.difftime() masks base::as.difftime()\n✖ lubridate::date()        masks base::date()\n✖ dplyr::filter()          masks stats::filter()\n✖ lubridate::intersect()   masks base::intersect()\n✖ dplyr::lag()             masks stats::lag()\n✖ lubridate::setdiff()     masks base::setdiff()\n✖ lubridate::union()       masks base::union()\n```\n:::\n:::\n\n\n### import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# list of dispensaries\ndsps <-  as.data.frame(read.csv(\"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dispensary_types_defined.csv\"))\n\n# list of all zip codes with at lease one dispensary\ndsps_zips <-  as.data.frame(read.csv(\"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dsps_zips.csv\"))\n\n#county geocodes scraped from Wikipedia\ncounty_codes <- (read.csv(\"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/density tables/county_FIPS_codes.csv\"))\n```\n:::\n\n\n### spatial join between dispensary locations and geocodes\n\nAt this stage, the zip codes are my main geographical identifier for my dispensary data frame. In an attempt to find the tract level data, I tapped into the Tigris package. \n[*adapted from \"[tigris](https://github.com/walkerke/tigris \"Kyle Walker\")\"*]{style=\"font-size: 80%;\"}\n\n\n::: {.cell}\n\n:::\n\n\n\\\n\n### match the files to the county codes with join\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# time to add the spacial data to my dispensary list!\ndsps$zip <-  as.character(dsps$zip) # convert_back to characters\ndsps<- left_join(dsps, dsps_geos, by = \"zip\")\ndsps$county_code <-  as.integer(dsps$county_code) # using an intgers to join other datasets\n\n# a lovely document with dispensary tracts and county codes\ndsps<- left_join(dsps, county_codes, by = \"county_code\")\n\n# saving for later in case I can use the tract level data\nwrite.csv(dsps, \"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dispenaries_tracts.csv\")\n```\n:::\n\n\n\\ \n\n### count the dispensaries with summarize\n\n::: {.cell}\n\n```{.r .cell-code}\ndsps_summed <-  dsps %>% \n  filter(month(date) == 12) %>% \n  filter(year < 2017) %>% \n  select(dba, county_code, \"GEOID\" =GEOID.y, year) %>% \n  group_by(year, GEOID) %>% \n  summarise(num_licenses = n()) %>% \n  pivot_wider(names_from = year, values_from = num_licenses, values_fill = 0)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nwrite.csv(dsps_summed, \"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dispensary_counts_county_year.csv\")\n```\n:::\n\n\n### retrieve census population data with Tidy Census\n\nthe paper looks at the poverty rate, percent black, percent Hispanic, and the employment rate demographic data comes from the U.S. Census 2014 American Community Survey 5-year sample, and employment data comes from the U.S. Census 2013 Origin-Destination Employment Statistics\n\nI've already established an API census_api_key(\"\\[API removed for privacy\\]\", install = TRUE)\n\n[SocialExplore.com](https://www.socialexplorer.com/data/ACS2013_5yr/metadata/?ds=ACS13_5yr&var=B17001001) is a helpful website for definitions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#I've already established an API census_api_key\n#(\"\\[API removed for privacy\\]\", install= TRUE)\n\ndemo_factors <- get_acs(\n  year = 2014,\n  geography = \"county\",\n  state = \"CO\",\n  variables = c(population_14 = \"B01001_001\",\n                pov_base_14 = \"B17001_001\", # Universe: Population for whom poverty status Is determined (base of % poverty)\n                pov_pop_14 = \"B17001_002\", # Income in the Past 12 Months Below Poverty Level\n                employeed = \"B23025_002\", # employed in labor for (16+)\n                black = \"B03002_004\",\n                hispanic = \"B03002_012\"),\n\n  output = \"wide\"\n) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2010-2014 5-year ACS\n```\n:::\n\n```{.r .cell-code}\n# i look forward to the day when the racial makeup of a zip code isn't an assumed identifier for poverty\ncolnames(demo_factors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"GEOID\"          \"NAME\"           \"population_14E\" \"population_14M\"\n [5] \"pov_base_14E\"   \"pov_base_14M\"   \"pov_pop_14E\"    \"pov_pop_14M\"   \n [9] \"employeedE\"     \"employeedM\"     \"blackE\"         \"blackM\"        \n[13] \"hispanicE\"      \"hispanicM\"     \n```\n:::\n:::\n\n\n\\\n\n### match the change in dispensary density with demographics\n\nHere I join two datasets using \"GEOID\", aggregate the annual population and demographic factors by geographic ID. Next, I created new variables representing the total population and economic indicators for each geographic ID. The resulting dataset has one row per unique geographic ID.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# switching from merging to left joins since it's easier to read\ndemo_factors$GEOID <-  as.integer(demo_factors$GEOID)\ndsps_summed$GEOID <-  as.integer(dsps_summed$GEOID)\n\ndsps_yoy_demos <- left_join(demo_factors, dsps_summed, by = \"GEOID\")\ncolnames(dsps_yoy_demos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"GEOID\"          \"NAME\"           \"population_14E\" \"population_14M\"\n [5] \"pov_base_14E\"   \"pov_base_14M\"   \"pov_pop_14E\"    \"pov_pop_14M\"   \n [9] \"employeedE\"     \"employeedM\"     \"blackE\"         \"blackM\"        \n[13] \"hispanicE\"      \"hispanicM\"      \"2013\"           \"2014\"          \n[17] \"2015\"           \"2016\"          \n```\n:::\n\n```{.r .cell-code}\ndsps_yoy_demos <- dsps_yoy_demos %>%\n  mutate_at(vars(15:18), replace_na, replace = 0) %>%\n  group_by(GEOID) %>% # add the total ins\n  summarize(\n    pop_2014 = sum(population_14E),\n    pov_pop_14 = sum(pov_pop_14E),\n    pov_base = sum(pov_base_14E),\n    black_pop = sum(blackE),\n    hispanic_pop = sum(hispanicE),\n    employeed_pop = sum(employeedE),\n    `2013` = sum(`2013`),\n    `2014` = sum(`2014`),\n    `2015` = sum(`2015`),\n    `2016` = sum(`2016`)\n  )\n```\n:::\n\n\\ \n\n## year-over-year function\n\nOne of former professors told me, if you have do write something three times then it's time to write a function! The year over year variance is another crucial aspect of NIMBY's model. This function will be applied to several variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# make a function to calculate the year over year changes\nyoy_avg_function <- function(df) {\n  # calculate  growth rates\n  df$yoy_2014 <- ((df$`2014` - df$`2013`) / df$`2013`) \n  df$yoy_2015 <- ((df$`2015` - df$`2014`) / df$`2014`) \n  df$yoy_2016 <- ((df$`2016` - df$`2015`) / df$`2015`) \n  \n  # average growth rate and round to 3 decimal places\n  df$dsp_yoy_avg <- rowMeans(df[, c(\"yoy_2014\", \"yoy_2015\", \"yoy_2016\")], na.rm = TRUE)\n  df <- df %>% mutate_at(vars(starts_with(\"dsp\")), funs(round(., 3))) # round\n  \n  return(df)\n}\n```\n:::\n\n\n\\\n\n### calculate the year-over-year change average in dispensaries for the state of Colorado\n\n::: {.cell}\n\n```{.r .cell-code}\ncolorado_yoy_average <-  dsps_yoy_demos %>% \n  summarize(\n    `2013` = sum(`2013`),\n    `2014` = sum(`2014`),\n    `2015` = sum(`2015`),\n    `2016` = sum(`2016`)\n  )\n\ncolorado_yoy_average <-  yoy_avg_function(colorado_yoy_average) %>% \n  select(\"Colorado Average\" = dsp_yoy_avg)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n```\n:::\n:::\n\n\n### find the race, poverty and employment rates at the county level\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# make the rates\n# create the percentages:\ndsps_yoy_demos  <- dsps_yoy_demos %>% \n  #create percentages  \n  mutate(pct_poverty_rate = (pov_pop_14/pov_base),\n         pct_black = (black_pop/ pop_2014),\n         pct_hispanic = (hispanic_pop/ pop_2014)) %>% \n  #round\n  mutate_at(vars(starts_with(\"pct\")), funs(round(., 3)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n```\n:::\n:::\n\n\n### create quartiles to recreate table1\n\n![table1 from the original paper is my second reference at cross comparing my results against NIMBY's](images/Table1.png)\n\nUsing the ntile function, I classify the dispensary year-over-year changes by counties quartiles of the various variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndsps_yoy_demos <- dsps_yoy_demos %>% \n  mutate(qrt_pov = ntile(pct_poverty_rate,4)) %>% \n  mutate(qrt_black = ntile(pct_black,4)) %>%\n  mutate(qrt_hispanic = ntile(pct_hispanic,4)) %>% \n  mutate(qrt_employment = ntile(employeed_pop,4))\n\n# calculate the YOY average\ndsps_yoy_qtiles <- yoy_avg_function(dsps_yoy_demos) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n```\n:::\n\n```{.r .cell-code}\n# save the data for the crime per capita calculations\nwrite.csv(dsps_yoy_qtiles, \"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dsps_yoy_qtiles.csv\")\n```\n:::\n\n\n\\\n\nTransform the data into a tabluar format to be presented in a simple summarized table\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# poverty quartiles by dispensary density\npoverty_qts <- dsps_yoy_qtiles %>% \n  select(\n    qrt_pov,\n    `2013`,\n    `2014`,\n    `2015`,\n    `2016`\n      ) %>% \n  group_by(qrt_pov) %>% # add the total ins\n  summarize(\n    `2013` = sum(`2013`),\n    `2014` = sum(`2014`),\n    `2015` = sum(`2015`),\n    `2016` = sum(`2016`)\n  ) %>% \n  yoy_avg_function  %>% \n  select(1,9)\n  \n\n# I checked and my total match across quartiles, and look similar to the area graph data\n# black population quartiles by dispensary density\nblack_qts <- dsps_yoy_qtiles %>% \n  select(\n    qrt_black,\n    `2013`,\n    `2014`,\n    `2015`,\n    `2016`\n  ) %>% \n  group_by(qrt_black) %>% # add the total ins\n  summarize(\n    `2013` = sum(`2013`),\n    `2014` = sum(`2014`),\n    `2015` = sum(`2015`),\n    `2016` = sum(`2016`)\n  ) %>% \n  yoy_avg_function  %>% \n  select(1,9)\n\n# Hispanic quartiles by dispensary density\nhispanic_qts <- dsps_yoy_qtiles %>% \n  select(\n    qrt_hispanic,\n    `2013`,\n    `2014`,\n    `2015`,\n    `2016`\n  ) %>% \n  group_by(qrt_hispanic) %>% # add the total ins\n  summarize(\n    `2013` = sum(`2013`),\n    `2014` = sum(`2014`),\n    `2015` = sum(`2015`),\n    `2016` = sum(`2016`)\n  ) %>% \n  yoy_avg_function  %>% \n  select(1,9)\n\n# employment quartiles by dispensary density\nemployment_qts <- dsps_yoy_qtiles %>% \n  select(\n    qrt_employment,\n    `2013`,\n    `2014`,\n    `2015`,\n    `2016`\n    ) %>% \n    group_by(qrt_employment) %>% # add the total ins\n      summarize(\n        `2013` = sum(`2013`),\n        `2014` = sum(`2014`),\n        `2015` = sum(`2015`),\n        `2016` = sum(`2016`)\n      ) %>% \n  yoy_avg_function  %>% \n  select(1,9)\n```\n:::\n\n\n### create a table of all my variables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# put everything together \ndensity_table1 <- poverty_qts %>%\n  left_join(black_qts, by = c(\"qrt_pov\" = \"qrt_black\")) %>%\n  left_join(hispanic_qts, by = c(\"qrt_pov\" = \"qrt_hispanic\")) %>%\n  left_join(employment_qts, by = c(\"qrt_pov\" = \"qrt_employment\"))\n\n\n# rename the columns\ncolnames(density_table1) <- c(\"Quartile\", \"Poverty Rate\", \"Pct. Black\", \"Pct. Hispanic\", \"Employment\", \"Colorado Average\")\ncombined_table <- bind_rows(density_table1 , colorado_yoy_average)\n```\n:::\n\n\n\n\n\n# Created a formated table for the results section\n\nformat the table for a side by side comparison [*adapted from \"[Making high-quality tables in R with the gt package](https://www.youtube.com/watch?v=dxDeotwylr8 \"R for the Rest of Us\")\"*]{style=\"font-size: 80%;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2 <- combined_table %>% \n gt() %>%  # table function\n  sub_missing(\n    columns = everything(), # remove the NAs from my Colorado Stat, appears blank\n    missing_text = \"\"\n  ) %>% \n  \n  \n  tab_header(\n    title = \"average change in dispensary density by local characteristics\",\n    subtitle = \"replicated verison\"\n  ) %>%\n  \n  # column headers\n  tab_style(\n    style = cell_text(weight = \"bold\", align = \"center\"),\n    locations = cells_column_labels(everything())\n  ) %>% \n \n  # cells\n   tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_body(columns = everything())\n  ) %>% \n \n  # cells \n  tab_style(\n    style = cell_borders(sides = \"all\", color = \"transparent\", weight = px(0)),\n    locations = cells_body(columns = `Colorado Average`)\n  ) %>%\n  \n  # cells\n  tab_style(\n    style = cell_fill(color = \"#ABC7A9\", alpha = 0.2),\n    locations = cells_body(columns = vars(`Colorado Average`))\n  ) %>%\n \n  # last column\n   tab_style(\n    style = cell_borders(sides = \"left\", color = \"black\", weight = px(1)),\n    locations = cells_body(columns = `Colorado Average`)\n  ) %>%\n  \n  # last column\n  tab_style(\n    style = cell_fill(color = \"#f2f2f2\"),\n    locations = cells_body(rows = seq(1, nrow(combined_table), by = 2), columns = 1:(ncol(combined_table) - 1))\n  ) %>%\n  \n  tab_style(\n    style = cell_text(size = \"18px\", style = \"italic\"),\n    locations = cells_title(groups = \"title\")\n  ) %>%\n  \n  # spending too much time on the headers :-) \n  tab_options(\n    column_labels.border.top.color = \"white\",\n    column_labels.border.top.width = px(3),\n    column_labels.border.bottom.color = \"black\",\n    table_body.border.bottom.color = \"black\",\n    table.width = pct(100),\n    data_row.padding = px(10),\n    column_labels.background.color = \"#73A16F\"\n  ) %>%\n  \n  tab_options(\n    data_row.padding = px(12)\n  ) %>%\n  cols_width(\n    starts_with(\"Color\") ~ px(80),\n    everything() ~ px(120)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Since gt v0.3.0, `columns = vars(...)` has been deprecated.\n• Please use `columns = c(...)` instead.\n```\n:::\n\n```{.r .cell-code}\ntable2\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"ffconkkkzz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ffconkkkzz table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ffconkkkzz thead, #ffconkkkzz tbody, #ffconkkkzz tfoot, #ffconkkkzz tr, #ffconkkkzz td, #ffconkkkzz th {\n  border-style: none;\n}\n\n#ffconkkkzz p {\n  margin: 0;\n  padding: 0;\n}\n\n#ffconkkkzz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: 100%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ffconkkkzz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ffconkkkzz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ffconkkkzz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: #FFFFFF;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #73A16F;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ffconkkkzz .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #73A16F;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ffconkkkzz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ffconkkkzz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ffconkkkzz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ffconkkkzz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ffconkkkzz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ffconkkkzz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ffconkkkzz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ffconkkkzz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ffconkkkzz .gt_row {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ffconkkkzz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ffconkkkzz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ffconkkkzz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ffconkkkzz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ffconkkkzz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ffconkkkzz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ffconkkkzz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ffconkkkzz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ffconkkkzz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n}\n\n#ffconkkkzz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ffconkkkzz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ffconkkkzz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ffconkkkzz .gt_left {\n  text-align: left;\n}\n\n#ffconkkkzz .gt_center {\n  text-align: center;\n}\n\n#ffconkkkzz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ffconkkkzz .gt_font_normal {\n  font-weight: normal;\n}\n\n#ffconkkkzz .gt_font_bold {\n  font-weight: bold;\n}\n\n#ffconkkkzz .gt_font_italic {\n  font-style: italic;\n}\n\n#ffconkkkzz .gt_super {\n  font-size: 65%;\n}\n\n#ffconkkkzz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ffconkkkzz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ffconkkkzz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ffconkkkzz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ffconkkkzz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ffconkkkzz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ffconkkkzz .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;; width: 100%\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:120px;\"/>\n    <col style=\"width:120px;\"/>\n    <col style=\"width:120px;\"/>\n    <col style=\"width:120px;\"/>\n    <col style=\"width:120px;\"/>\n    <col style=\"width:80px;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"6\" class=\"gt_heading gt_title gt_font_normal\" style=\"font-size: 18px; font-style: italic;\">average change in dispensary density by local characteristics</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"6\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>replicated verison</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center; font-weight: bold;\" scope=\"col\" id=\"Quartile\">Quartile</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center; font-weight: bold;\" scope=\"col\" id=\"Poverty Rate\">Poverty Rate</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center; font-weight: bold;\" scope=\"col\" id=\"Pct. Black\">Pct. Black</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center; font-weight: bold;\" scope=\"col\" id=\"Pct. Hispanic\">Pct. Hispanic</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center; font-weight: bold;\" scope=\"col\" id=\"Employment\">Employment</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center; font-weight: bold;\" scope=\"col\" id=\"Colorado Average\">Colorado Average</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Quartile\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">1</td>\n<td headers=\"Poverty Rate\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.072</td>\n<td headers=\"Pct. Black\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.159</td>\n<td headers=\"Pct. Hispanic\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.163</td>\n<td headers=\"Employment\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.500</td>\n<td headers=\"Colorado Average\" class=\"gt_row gt_right\" style=\"text-align: center; border-left-width: 1px; border-left-style: solid; border-left-color: black; border-right-width: 0px; border-right-style: solid; border-right-color: transparent; border-top-width: 0px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; background-color: rgba(171,199,169,0.2);\"></td></tr>\n    <tr><td headers=\"Quartile\" class=\"gt_row gt_right\" style=\"text-align: center;\">2</td>\n<td headers=\"Poverty Rate\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.140</td>\n<td headers=\"Pct. Black\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.269</td>\n<td headers=\"Pct. Hispanic\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.049</td>\n<td headers=\"Employment\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.508</td>\n<td headers=\"Colorado Average\" class=\"gt_row gt_right\" style=\"text-align: center; border-left-width: 1px; border-left-style: solid; border-left-color: black; border-right-width: 0px; border-right-style: solid; border-right-color: transparent; border-top-width: 0px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; background-color: rgba(171,199,169,0.2);\"></td></tr>\n    <tr><td headers=\"Quartile\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">3</td>\n<td headers=\"Poverty Rate\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.150</td>\n<td headers=\"Pct. Black\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.074</td>\n<td headers=\"Pct. Hispanic\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.113</td>\n<td headers=\"Employment\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\">0.219</td>\n<td headers=\"Colorado Average\" class=\"gt_row gt_right\" style=\"text-align: center; border-left-width: 1px; border-left-style: solid; border-left-color: black; border-right-width: 0px; border-right-style: solid; border-right-color: transparent; border-top-width: 0px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; background-color: rgba(171,199,169,0.2);\"></td></tr>\n    <tr><td headers=\"Quartile\" class=\"gt_row gt_right\" style=\"text-align: center;\">4</td>\n<td headers=\"Poverty Rate\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.100</td>\n<td headers=\"Pct. Black\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.113</td>\n<td headers=\"Pct. Hispanic\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.134</td>\n<td headers=\"Employment\" class=\"gt_row gt_right\" style=\"text-align: center;\">0.085</td>\n<td headers=\"Colorado Average\" class=\"gt_row gt_right\" style=\"text-align: center; border-left-width: 1px; border-left-style: solid; border-left-color: black; border-right-width: 0px; border-right-style: solid; border-right-color: transparent; border-top-width: 0px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; background-color: rgba(171,199,169,0.2);\"></td></tr>\n    <tr><td headers=\"Quartile\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\"></td>\n<td headers=\"Poverty Rate\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\"></td>\n<td headers=\"Pct. Black\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\"></td>\n<td headers=\"Pct. Hispanic\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\"></td>\n<td headers=\"Employment\" class=\"gt_row gt_right\" style=\"text-align: center; background-color: #F2F2F2;\"></td>\n<td headers=\"Colorado Average\" class=\"gt_row gt_right\" style=\"text-align: center; border-left-width: 1px; border-left-style: solid; border-left-color: black; border-right-width: 0px; border-right-style: solid; border-right-color: transparent; border-top-width: 0px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; background-color: rgba(171,199,169,0.2);\">0.115</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}