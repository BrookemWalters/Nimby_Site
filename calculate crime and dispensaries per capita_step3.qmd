---
format:
  html:
    theme: minty
    toc: true
    code-fold: show
    code-overflow: wrap
---

![](images/per%20capita.png)

**This code: finds the crime and dispensary rates per 10,000 by county**

1.  finds the population three year average
2.  calculates dispensaries per capita
3.  maps the fbi historical crime data into a single data frame
4.  calculates the county crime rates
5.  matches the crime rates with the dispensaries per capita by geoid
6.   generates a scatter plot

The goal is recreate this linear model:

### ![](images/linear_model.jpg)

### load packages

```{r, echo=FALSE, warning=FALSE}
library(fs) # for listing all files in a directory
library(lubridate) # format dates
library(openxlsx) # open excel
library(readxl) # read in the excel files
library(tidycensus)
library(tidyverse) # purr package mapping, dplyer package 
```

### load in my datasets

select the relevant fields

```{r}
dsps_avg <- read.csv("~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dsps_yoy_qtiles.csv") %>% 
  select(GEOID,
  "2013" = X2013,
  "2014" = X2014,
  "2015" = X2015,
  "2016" = X2016)
```

### find the three year average count of dispensaries

```{r}
dsps_avg$dsps_average <-  rowMeans(dsps_avg[, c("2014", "2015", "2016")], na.rm = TRUE)
dsps_avg  <-  dsps_avg %>% mutate_at("dsps_average", round, .2) # round
dsps_avg <-  dsps_avg %>% select(GEOID,dsps_average)
```

### find the local population rates for 2014. 2015, 2016

```{r}
#pull the population totals from the tidycensus
  population_avg <- get_acs(
    year = 2014,
    geography = "county",
    state = "CO",
    variables = c(population_14 = "B01001_001",
    output = "wide")) %>%
    select(GEOID,
    NAME,
    "pop14" = estimate)
    
  
  population15 <- get_acs(
    year = 2015,
    geography = "county",
    state = "CO",
    variables = c(population_15 = "B01001_001",
    output = "wide"
    ))
    
  population16 <- get_acs(
    year = 2016,
    geography = "county",
    state = "CO",
    variables = c(population_15 = "B01001_001",
    output = "wide"
    ))
```

### join the population fields to the main dataframe

```{r}
# add the population estimates to the main doc.  
population_avg$pop15 <- population15$estimate
population_avg$pop16 <- population16$estimate

# find the average population over the time period
population_avg$pop_avg <-  rowMeans(population_avg[, c("pop14", "pop15", "pop16")], na.rm = TRUE)
population_avg  <-  population_avg  %>% mutate_at("pop_avg", round) # round

#use this data to calculate crime rates
write.csv(population_avg, ("~/gvsu/winter 23/CIS 635/NIMBY/cleaning/crime/populations_avg.csv")) 


population_avg <- population_avg %>%
select(1,2,6) #geo id, name and average
```

### match the geoids and calculate the per capital dispensary rate

```{r}
#match the geoids between the two dataframes
population_avg$GEOID <-  as.integer(population_avg$GEOID)
population_avg$NAME<- gsub(" County, Colorado", "", population_avg$NAME) # format the name to fit the crime
dsps_per_capita <- left_join(population_avg, dsps_avg, by = "GEOID") %>% 
mutate_at(vars(4), replace_na, replace = 0) # remove NAs

# calculate the dispensary per 10,000 population rate
dsps_per_capita$dps_per_cap <- (dsps_per_capita$dsps_average / dsps_per_capita$pop_avg) * 10000
dsps_per_capita  <-  dsps_per_capita %>% mutate_at(vars(starts_with("dps")), funs(round(., 1))) # round
```

### pull in the fbi crime data same as the dispensary

```{r, echo=FALSE, warning=FALSE}
setwd("~/gvsu/winter 23/CIS 635/NIMBY/cleaning/crime/FBI Crime Rates")
co_crime <- dir_ls() %>% set_names()
all_co_crime <- map_df(co_crime, ~read_excel(.x), .id = "filename")

# create a year column
all_co_crime$year <-   str_extract(all_co_crime$filename, "\\d{4}")
all_co_crime <- all_co_crime %>%  select(2,4, 76) 
```

### filter to get 2016 data, and pivot, summarize by year and geography

calcuate YOY average

```{r}
all_co_crime  <- all_co_crime %>% 
   filter(year < 2017) %>% 
   group_by(Geography, year) %>% 
   summarise(Total_Offenses = sum(`Total\nOffenses`)) %>% 
   pivot_wider(names_from = "year", values_from = "Total_Offenses") 

source("~/gvsu/winter 23/CIS 635/NIMBY/formatted code/yoy_function.R")
all_co_crime  <-  yoy_avg_function(all_co_crime) %>% 
  rename(crime_yoy_avg = dsp_yoy_avg)

all_co_crime $crime_average <- rowMeans(all_co_crime [, c("2014", "2015", "2016")], na.rm = TRUE) 
all_co_crime  <-  all_co_crime  %>% select(1,9,10)
```

### calculate the crimes per capita

join to the population totals

```{r}
crime_per_capita <-  left_join(population_avg, all_co_crime, by = c("NAME" = "Geography"))

crime_per_capita$crime_per_cap <- (crime_per_capita$crime_average / crime_per_capita$pop_avg ) * 10000
crime_per_capita <-  crime_per_capita %>% mutate_at(vars(starts_with("crime")), funs(round(., 1)))  # round
```

### time to join the per capitas together!

```{r}
# connect the variables, pulling some in from the density file
dsps_yoy_qtiles <-  read.csv("~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dsps_yoy_qtiles.csv")



linear_variables <-  left_join(crime_per_capita, dsps_per_capita, by = "GEOID")
linear_variables <-  left_join(linear_variables, dsps_yoy_qtiles, by = "GEOID")

colnames(linear_variables)

linear_variables <-  linear_variables %>% 
  select(
    GEOID,
    "County" =`NAME.x`,
    crime_per_cap,
    dps_per_cap,
    crime_yoy_avg,
    dsp_yoy_avg,
    pct_poverty_rate,
    pct_black,
    pct_hispanic,
    employeed_pop)


# update the NAs to reflect the 0 crimes and the 0 dispensary locations 
linear_variables <- linear_variables %>% 
  mutate(dsp_yoy_avg = round(dsp_yoy_avg, 1)) %>% 
  mutate(dsp_yoy_avg = if_else(is.na(dsp_yoy_avg), 0, dsp_yoy_avg)) %>%
  mutate(dsp_yoy_avg = if_else(dsp_yoy_avg == Inf, 0, dsp_yoy_avg)) %>%
  mutate(crime_yoy_avg = if_else(is.na(crime_yoy_avg), 0, crime_yoy_avg)) %>%
  mutate(crime_yoy_avg = if_else(crime_yoy_avg == Inf, 0, crime_yoy_avg))



write.csv(linear_variables, "~/gvsu/winter 23/CIS 635/NIMBY/cleaning/linear_model/variables/linear_variable.csv")
```
 
 
 ### make a scatter plot by crime rate and dispensaries
 
```{r}

```
 
 
 
 
