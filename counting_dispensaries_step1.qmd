---
format:
  html:
    theme: minty
    toc: true
    toc-location: left
    code-fold: false
editor: 
  markdown: 
    wrap: 85
---

![](images/counting%20dispensaries.png)

# counting dispensaries:

## This code: creates a dataframe of dispensaries from 2013 - 2013

1.  lists all the files in the current working directory

2.  retains the file name as new variable

3.  combines the listed excel files from that directory them into a single data frame

4.  create a new date variable extracted from the file name

5.  merges the same variables with different names together and overrides the N/As

6.  cleans up the business names creates a new type variable based of the license
    number prefix

7.  finds missing business names and finds and replaces the NAs

8.  finds the missing zips codes and finds and replaces the NAs

## NIMBY's Method:

> *The data on dispensary locations come from the Colorado Department of Revenue,
> which starting in January 2013 has published a monthly list of each active medical
> and recreational license. Overall, our sample covers 48 months between 2013 and
> 2016 for 143 census tracts in the City of Denver.* [@brinkman2017]

NIMBY's data were accessed at a longer active
[Colorado.gov](www.colorado.gov/pacific/enforcement/%20archived-med-medical-and-retail-marijuana-licensee-lists "Accessed by the authors in January 2017")
page: in January 2017.

## My Method:

*Data Source:* Colorado Department of Revenue: [Medical and Retail Marijuana
Licencees](https://sbg.colorado.gov/med/licensee-information "Dispensaries in the State of Colorado 2013 - 2023 by month, type, and location")

Accessed April 2023

#### Install Packages:

```{r, echo=FALSE, warning=FALSE}
library(tidyverse) # purr package mapping, dplyer package 
library(readxl) # read in the excel files
library(openxlsx) # open excel
library(fs) # for listing all files in a directory
library(lubridate) # format dates
library(tidygeocoder)# match zip codes
```

### map and iterate through all the Excel files

combines all 700 files into a single data frame

[*adapted from "[Pass chunk of filename to column name in a
loop](https://community.rstudio.com/t/pass-chunk-of-filename-to-column-name-in-a-loop/141523 "Posit Community")"*]{style="font-size: 80%;"}

```{r, warning=FALSE}
# set working directory for this chunk only
setwd("~/gvsu/winter 23/CIS 635/NIMBY/cleaning/dsp_data")
dsp <- dir_ls() %>% set_names() # grab all of the file names 

#  the .id parameter creates a new column called "filename" 
all_dsps <- map_df(dsp, ~read_excel(.x), .id = "filename")

# extract the date from the file name and create a new date column
all_dsps <- all_dsps %>% 
  mutate(date = str_extract(filename, "\\d{6}"),
         date = as.Date(paste0("01", date), format = "%d%m%Y"))
```

### create uniform observation fields

over the years different naming conventions and styles were used

[*adapted from "[How to Use the coalesce() Function in
dplyr](https://www.statology.org/dplyr-coalesce "Statology")"*]{style="font-size: 80%;"}

```{r}
# use coalesce to combine like columns and override the N/A
all_dsps<-  all_dsps %>% 
  mutate(dba = coalesce(DBA,`DOING BUSINESS AS`)) %>% 
  mutate(city = coalesce(CITY, City)) %>% 
  mutate(licensee = coalesce(Licensee, Licensees, LICENSEE, `Licensee Name` )) %>% 
  mutate(zip = coalesce(ZIP, Zip, ZipCode)) %>% 
  mutate(license_no = coalesce(`Lic #`,`LICENSE #`, `License Number`,LicenseNumber, license_no, `License #` )) 

#make a year column / variable
all_dsps$year <- substr(all_dsps$date, 1,4)


# select the relevant fields
all_dsps <- all_dsps %>%
  select(1, 26, 37:42)
```

### create uniform business names

...to the best of my ability <br>

I now know clever naming conventions for cannabis dispensaries. <br> takes a few
minutes

```{r}
# same case
all_dsps$dba <- toupper(all_dsps$dba) # DBA = "Doing Business As"

# replace chaotic naming conventions
all_dsps$dba <- gsub("3D CENTER","3D CANNABIS CENTER", all_dsps$dba)
all_dsps$dba <- gsub("3D CANNABIS CENTER AND 3D DISPENSARY","3D CANNABIS CENTER", all_dsps$dba)
all_dsps$dba <- gsub("3D DISPENSARY AND/OR 3D CANNABIS CENTER","3D CANNABIS CENTER", all_dsps$dba)
all_dsps$dba <- gsub("21+","", all_dsps$dba)
all_dsps$dba <- gsub(" LLC","", all_dsps$dba)

# only remove LLC if nothing else follows
all_dsps$dba <- gsub("LLC(?!.)$", "", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("&","AND", all_dsps$dba)
all_dsps$dba <- gsub(",","", all_dsps$dba)
all_dsps$dba <- gsub(" INC","", all_dsps$dba)
all_dsps$dba <- gsub("INC","", all_dsps$dba)
all_dsps$dba <- gsub("'","", all_dsps$dba)
all_dsps$dba <- gsub("?S","S", all_dsps$dba)
all_dsps$dba <- gsub("-","", all_dsps$dba)
all_dsps$dba <- gsub(":","", all_dsps$dba)
all_dsps$dba <- gsub("COMPANY","", all_dsps$dba)
all_dsps$dba <- gsub(" CO(?!.)$", "", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("CO(?!.)$", "", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("CENTERS","CENTER", all_dsps$dba)
all_dsps$dba <- gsub("LLP(?!.)$", "", all_dsps$dba, perl = TRUE)
all_dsps$dba <- gsub("B.GOOD","BGOOD", all_dsps$dba)
all_dsps$dba <- gsub("B.?GOOD","BGOOD", all_dsps$dba)
all_dsps$dba <- gsub("B GOOD","BGOOD", all_dsps$dba)
all_dsps$dba <- gsub("DEN REC","DENREC", all_dsps$dba)
all_dsps$dba <- gsub("111","1:11", all_dsps$dba)
all_dsps$dba <- gsub("111","1:11", all_dsps$dba)
all_dsps$dba <- gsub("ORGANICS","ORGANIC", all_dsps$dba)
all_dsps$dba <- gsub("ALPENGLOW BOTANICALS","ALPENGLOW", all_dsps$dba)
all_dsps$dba <- gsub("ALTITUDE ORGANIC CANNABIS","ALTITUDE ORGANICS", all_dsps$dba)
all_dsps$dba <- gsub("ALTITUDE ORGANIC MEDICINE","ALTITUDE ORGANICS", all_dsps$dba)
all_dsps$dba <- gsub("ANNIE?S DISPENSARY","ANNIES DISPENSARY", all_dsps$dba)
all_dsps$dba <- gsub("ASCEND CANNABIS.","ASCEND CANNABIS", all_dsps$dba)
all_dsps$dba <- gsub("BACK TO THE GARDEN HEALTH AND WELLNESS CENTER","BACK TO THE GARDEN", all_dsps$dba)
all_dsps$dba <- gsub("BACK TO THE GARDENS","BACK TO THE GARDEN", all_dsps$dba)
all_dsps$dba <- gsub("BEAN WELLNESS GROUP II","BEAN WELLNESS GROUP", all_dsps$dba)
all_dsps$dba <- gsub("BEST LORADO CANNABIS","BEST LORADO MEDS", all_dsps$dba)
all_dsps$dba <- gsub("BEST LORADO MEDS ORG","BEST LORADO MEDS", all_dsps$dba)
all_dsps$dba <- gsub("BEST LORADO MEDS.ORG","BEST LORADO MEDS", all_dsps$dba)
all_dsps$dba <- gsub("BESTLORADOMEDS.ORG","BEST LORADO MEDS", all_dsps$dba)
all_dsps$dba <- gsub("BESTLORADOMEDS.ORG","BEST LORADO MEDS", all_dsps$dba)
all_dsps$dba <- gsub("BONFIRE CANNABIS MPANY","BONFIRE CANNABIS", all_dsps$dba)
all_dsps$dba <- gsub("BOULDER MARIJUANA.","BOULDER MARIJUANA", all_dsps$dba)
all_dsps$dba <- gsub("BOULDER WELLNESS CANNABIS","BOULDER WELLNESS", all_dsps$dba)
all_dsps$dba <- gsub("BRECKENRIDGE ORGANIX","BRECKENRIDGE ORGANIC THERAPHY", all_dsps$dba)
all_dsps$dba <- gsub("BRECKENRIDGE CANNABIS CLUB","BRECKENRIDGE ORGANIC THERAPHY", all_dsps$dba)
all_dsps$dba <- gsub("CLEARANCE CANNABIS.","CLEARANCE CANNABIS", all_dsps$dba)
all_dsps$dba <- gsub("CRESTED BUTTE WELLNESS CENTER","CRESTED BUTTE", all_dsps$dba)
all_dsps$dba <- gsub("CRESTED BUTTE ALTERNTIVE MEDICINE","CRESTED BUTTE", all_dsps$dba)
all_dsps$dba <- gsub("DO CRESTED BUTTE","CRESTED BUTTE", all_dsps$dba)
all_dsps$dba <- gsub("DOCTOR?S ORDERS","DOCTORS ORDERS", all_dsps$dba)
all_dsps$dba <- gsub("ENLIGHTENED CARE PLUS","ENLIGHTENED CARE", all_dsps$dba)
all_dsps$dba <- gsub("FIFTY 2 EIGHTY","FIFTY2EIGHTY", all_dsps$dba)
all_dsps$dba <- gsub("GM ENTERPRISE.","GM ENTERPRISE", all_dsps$dba)
all_dsps$dba <- gsub("GREEN DREAM CANNABIS","GREEN DREAM", all_dsps$dba)
all_dsps$dba <- gsub("GREEN DREAM HEALTH SERVICES","GREEN DREAM", all_dsps$dba)
all_dsps$dba <- gsub("GREEN GRASS CENTRAL CITY","GREEN GRASS", all_dsps$dba)
all_dsps$dba <- gsub("GREEN FIELDS","GREENFIELDS", all_dsps$dba)
all_dsps$dba <- gsub("HEADQUARTERS CANNABIS","HEADQUARTERS", all_dsps$dba)
all_dsps$dba <- gsub("HEALING HOUSE DENVER","HEALING HOUSE", all_dsps$dba)
all_dsps$dba <- gsub("HEALING HOUSE LAKEWOOD","HEALING HOUSE", all_dsps$dba)
all_dsps$dba <- gsub("HELPING HANDS CANNABIS","HELPINGHANDS", all_dsps$dba)
all_dsps$dba <- gsub("HELPING HANDS HERBALS","HELPINGHANDS", all_dsps$dba)
all_dsps$dba <- gsub("HIGH COUNTRY HEALING 4","HIGH COUNTRY HEALING", all_dsps$dba)
all_dsps$dba <- gsub("HIGH COUNTRY HEALING 5","HIGH COUNTRY HEALING", all_dsps$dba)
all_dsps$dba <- gsub("HIGH COUNTRY HEALING 6","HIGH COUNTRY HEALING", all_dsps$dba)
all_dsps$dba <- gsub("HIGH COUNTRY HEALING 8","HIGH COUNTRY HEALING", all_dsps$dba)
all_dsps$dba <- gsub("IHC/SANTE","IHC/SANTE", all_dsps$dba)
all_dsps$dba <- gsub("IVITA WELLNESS","IVITA", all_dsps$dba)
all_dsps$dba <- gsub("KIND LOVE / KL","KIND LOVE", all_dsps$dba)
all_dsps$dba <- gsub("KL","KIND LOVE", all_dsps$dba)
all_dsps$dba <- gsub("KIND LOVE EXPRESS","KIND LOVE", all_dsps$dba)
all_dsps$dba <- gsub("KIND MEDS","KINDMEDS", all_dsps$dba)
all_dsps$dba <- gsub("LA NTES LNE BAR + DISPENSARY","LANTES CLONE BAR AND DISPENSARY", all_dsps$dba)
all_dsps$dba <- gsub("LANTES CLONE BAR + DISPENSARY","LANTES CLONE BAR AND DISPENSARY", all_dsps$dba)
all_dsps$dba <- gsub("LEAF ASPEN","LEAF", all_dsps$dba)
all_dsps$dba <- gsub("LEVELS IV.","LEVELS IV", all_dsps$dba)
all_dsps$dba <- gsub("LIGHTSHADE LABS","LIGHTSHADE", all_dsps$dba)
all_dsps$dba <- gsub("LIVWELL III","LIVWELL", all_dsps$dba)
all_dsps$dba <- gsub("LORADO HARVEST SUPPLY","LORADO HARVEST", all_dsps$dba)
all_dsps$dba <- gsub("LORADO HARVEST COMPANY","LORADO HARVEST", all_dsps$dba)
all_dsps$dba <- gsub("LOTUS MEDICAL II","LOTUS MEDICAL", all_dsps$dba)
all_dsps$dba <- gsub("MAGGIE?S FARM","MAGGIES FARM", all_dsps$dba)
all_dsps$dba <- gsub("MAGNOLIA ROAD CANNABIS COMPANY","MAGNOLIA ROAD", all_dsps$dba)
all_dsps$dba <- gsub("MAGNOLIA ROAD CANNABIS","MAGNOLIA ROAD", all_dsps$dba)

 # removes all of the trailing names conventions
all_dsps$dba <- gsub("MEDICINE MAN(?!.)$","MEDICINE MAN", all_dsps$dba, perl = TRUE )
all_dsps$dba <- gsub("MMJ AMERICA(?!.$)","MMJ AMERICA", all_dsps$dba, perl = TRUE)
all_dsps$dba <- gsub("MOUNTAIN MEDICINALS(?!.)$","MOUNTAIN MEDICINALS", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("COMPASSIONATE CARE(?!.)$","COMPASSIONATE CARE", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("MR. NICE GUYS","MR NICE GUYS", all_dsps$dba) #
all_dsps$dba <- gsub("NATIVE ROOTS(?!.)$","NATIVE ROOTS", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("NATURES HERBS(?!.)$","NATURES HERBS", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("NATURES MEDICINE(?!.)$","NATURES MEDICINE", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("NEW AMSTERDAM(?!.)$","NEW AMSTERDAM", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("NORTHERN LIGHTS CANNABIS.","NORTHERN LIGHTS CANNABIS", all_dsps$dba) 
all_dsps$dba <- gsub("PATIENTS CHOICE(?!.)$","PATIENTS CHOICE", all_dsps$dba,  perl = TRUE) 
all_dsps$dba <- gsub("PEAK","PEAK DISPENSARY", all_dsps$dba) 
all_dsps$dba <- gsub("PINK HOUSE(?!.)$","PINK HOUSE", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("PREFERRED ORGANIC(?!.)$","PREFERRED ORGANIC", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("PRIMO","PRIMO CANNABIS", all_dsps$dba) 
all_dsps$dba <- gsub("PURE MARIJUANA DISPENSARY","PURE DISPENSARY", all_dsps$dba) #
all_dsps$dba <- gsub("PURE MEDICAL DISPENSARY","PURE DISPENSARY", all_dsps$dba) 
all_dsps$dba <- gsub("PURE MEDICAL","PURE DISPENSARY", all_dsps$dba) 
all_dsps$dba <- gsub("RESERVE 1(?!.)$","RESERVE 1", all_dsps$dba, perl = TRUE) #
all_dsps$dba <- gsub("RIVERROCK(?!.)$","RIVERROCK", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("ROOTS RX","ROOTSRX", all_dsps$dba) 
all_dsps$dba <- gsub("SMOKEY?S","SMOKEYS", all_dsps$dba) 
all_dsps$dba <- gsub("SMOKED(?!.)$","SMOKED", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("SMOKING GUN","SMOKINGUN APOTHECARY", all_dsps$dba) 
all_dsps$dba <- gsub("STAR BUDS","STARBUDS", all_dsps$dba) 
all_dsps$dba <- gsub("STEEL CITY MEDS(?!.)$","STEEL CITY MEDS", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("STICKY BUDS(?!.)$","STICKYBUDS", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("STICKY BUDS","STICKYBUDS", all_dsps$dba) 
all_dsps$dba <- gsub("TETRA HYDRO CENTER","TETRAHYDROCENTER", all_dsps$dba) 
all_dsps$dba <- gsub("THE CANARY?S SONG","THE CANARYS SONG", all_dsps$dba) 
all_dsps$dba <- gsub("THE CLINIC(?!.)$","THE CLINIC", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("THE MEDICINE MAN","MEDICINE MAN", all_dsps$dba) 
all_dsps$dba <- gsub("THE SANCTUARY(?!.)$","THE SANCTUARY", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("THE STONE","THE STONE DISPENSARY", all_dsps$dba) 
all_dsps$dba <- gsub("TRU CANNABIS(?!.)$","TRU CANNABIS", all_dsps$dba, perl = TRUE) 
all_dsps$dba <- gsub("TUMBLEWEEK DISPENSARY EDWARDS","TUMBLEWEED DISPENSARY EDWARDS", all_dsps$dba) 
all_dsps$dba <- gsub("UNITY RD. CANNABIS SHOP","UNITY ROAD", all_dsps$dba) 
all_dsps$dba <- gsub("WALKING RAVEN II","WALKING RAVEN", all_dsps$dba)
all_dsps$dba <- gsub("WOLF PAC CANNABIS","WOLFPAC CANNABIS", all_dsps$dba)
all_dsps$dba <- gsub("ALLGREENS","CANNABIS MEDICAL TECHNOLOGY", all_dsps$dba)
```

exporting so I do not have to sit through this again

```{r}
write.csv(all_dsps,
          "~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dispensaries.csv")
```

```{r}
cleaned_dsps <- all_dsps

cleaned_dsps <- cleaned_dsps %>%
  mutate(type = if_else(startsWith(license_no, "402R"), "retail",
                        if_else(startsWith(license_no, "402-"), "medical",
                                "other")))

#remove the testing facilities, growers and transporters
dsps <-  cleaned_dsps %>% 
  filter(type == "medical" | type == "retail")

dsps$dba <- ifelse(dsps$dba == "NONE", NA, dsps$dba) # change the None's to NAs
dsps$zip<-  substr(dsps$zip, start = 1, stop = 5) # remove trailing numbers
```

### find missing business names

[*adapted from "[Dplyr solution using slice and
group](https://stackoverflow.com/questions/52465215/dplyr-solution-using-slice-and-group "StackOverflow")"*]{style="font-size: 80%;"}

```{r}
# select all business names and license numbers
dsps_list <-dsps  %>% 
  select(dba, license_no) #

# remove the missing fields, coming for those later
dsps_list <- as.data.frame(na.omit(dsps_list)) # remove na

# keep only the first instance (since their are multiple naming conventions 
# for each licensee)
dsps_list <- dsps_list %>%
  group_by(license_no) %>%
  slice(1)

# merge the business names by the license number 
# all.x = TRUE argument means include all rows from dsps 
 # even if there is no matching row in dsps_list
dsps_merge <- merge(dsps, dsps_list, by = "license_no", all.x= TRUE)

#update the "doing business as" column, replace the N/As
dsps_merge$dba <- coalesce(dsps_merge$dba.y, dsps_merge$dba.x)

dsps_merge$dba <- coalesce(dsps_merge$dba, dsps_merge$licensee)

# remove the duplicated columns
dsps_merge <-  dsps_merge %>% 
  select(
    license_no,
    dba,
    city,
    zip,
    type,
    date,
    year)
```

Look at this, it's glorious, almost

```{r}
head(dsps_merge)
```

### find the missing zip codes

I'll repeat the same process above for geography

```{r}
dsps_zips <-dsps_merge  %>% 
  select(zip, city, license_no) # add type for a distinct list

dsps_zips <- as.data.frame(na.omit(dsps_zips)) # remove na

# keep only the main/  first instance
dsps_zips<- dsps_zips %>%
  group_by(license_no) %>%
  slice(1)

#save this for creating per capita variables
write.csv(dsps_zips,
          "~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dsps_zips.csv")  

# xlook-up R style: overide the na's with the matches, same as a left_join
dsps_merge_zips <- merge(dsps_merge, dsps_zips, by = "license_no", all.x= TRUE)
dsps_merge_zips$zip <- coalesce(dsps_merge_zips$zip.x, dsps_merge_zips$zip.y)

# remove the duplicated columns, and update the main data frame
storelist<-  dsps_merge_zips %>% 
  select(
    license_no,
    dba,
    type,
    city = city.x,
    zip,
    date,
    year
  )

# export for manual review if needed
write.csv(storelist,
          "~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dispensaries.csv")
```

### find dispensaries that are both medical and recreational sellers

[*adapted from "[Join Data with dplyr in R: 6
Examples](https://www.youtube.com/watch?v=Yg-pNqzDuN4 "Statistics Globe Youtube Channel")"*]{style="font-size: 80%;"}

This is where things start to go awry, with the given data it is very difficult to
identify a business that operates as both

```{r}
# divide this into two new dataframes, one for medical, one for recreational
med_dsp <- filter(storelist, type == "medical")
rec_dsp <- filter(storelist, type == "retail")

# find the business that have the same name, city and date

# with two different names, so this is my best estimate
both_dsp <- merge(med_dsp, rec_dsp, by = c("dba", "date"))%>% 
  select(
    dba,
    "city" = `city.x`,
    date,
    "year" = `year.x`,
    "zip" = `zip.x`)
both_dsp$type <-  "both" 

# remove duplicates
both_dsp <- both_dsp %>%  distinct(dba, date, type, .keep_all = TRUE)

# removes the "both" businesses from the respective dataframes
med_only <- med_dsp %>%
  anti_join(both_dsp, by = c("dba", "date"))
med_only$type <-  "med_only" # label the type

rec_only <- rec_dsp %>%
  anti_join(both_dsp, by = c("dba", "date"))
rec_only$type <-  "rec_only" # label the type


# combine the dataframes together (like if i were to copy and paste it at the bottom of an excel file)
storelist_cleaned <- bind_rows(med_only,both_dsp, rec_only )
storelist_cleaned <- storelist_cleaned %>%  distinct(dba, type, date, zip, .keep_all = TRUE)

write.csv(storelist_cleaned,
          "dispensary_types_defined.csv")
```
