{
  "hash": "c55c2e4e5985399157394c0851c103bd",
  "result": {
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-overflow: wrap\n    toc: true\n---\n\n\n![](images/counting%20dispensaries.png)\n\n**This code: creates a dataframe of dispensaries from 2013 - 2023**\n\n-   retrieves all of the filenames from the working directory\n-   retains the filename as new variable\n-   combines the listed excel files from a defined directory into a single dataframe\n-   creates a new date variable extracted from the filename\n-   merges like variables with different column names together and overrides the N/As\n-   cleans up the business names, and classifies the observation drawn from the license number prefix\n-   finds missing business names and replaces the null values with features extracted from similar observations\n-   finds the missing zips codes and replaces the null values with matching license numbers\n\nThis section of my methodology was the most time intensive. Having quality historical data is the foundation of my project. Calculating the number of dispensaries is a key variable for the linear regression model.\n\n## NIMBY's Method:\n\n> *The data on dispensary locations come from the Colorado Department of Revenue, which starting in January 2013 has published a monthly list of each active medical and recreational license. Overall, our sample covers 48 months between 2013 and 2016 for 143 census tracts in the City of Denver.*\n>\n> [@brinkman2017]\n\nNIMBY's data were accessed at the no longer active [Colorado.gov](www.colorado.gov/pacific/enforcement/%20archived-med-medical-and-retail-marijuana-licensee-lists \"Accessed by the authors in January 2017\") page: in January 2017.\\\n\n## My Method:\n\n*Data Source:* Colorado Department of Revenue: [Medical and Retail Marijuana Licencees](https://sbg.colorado.gov/med/licensee-information \"Dispensaries in the State of Colorado 2013 - 2023 by month, type, and location\")![](images/CoDeptRev.png){width=\"165\"}\\\nAccessed April 2023\n\nBefore running the code below, I downloaded the dispensary files from the Colorado Department of Revenue's monthly list of med licensee data archive, and manually adjusted the naming convention to reflect the file's time period.\n\n\\\n\n### install packages:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.2.1     ✔ dplyr   1.1.1\n✔ tidyr   1.2.1     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n:::\n\n\n### combine files into a single dataframe, with a new date field:\n\n[*adapted from \"[Pass chunk of filename to column name in a loop](https://community.rstudio.com/t/pass-chunk-of-filename-to-column-name-in-a-loop/141523 \"Posit Community\")\"*]{style=\"font-size: 80%;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set working directory for this chunk only\nsetwd(\"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/dsp_data\")\ndsp <- dir_ls() %>% set_names() # grab all of the file names \n\n#  the .id parameter creates a new column called \"filename\" \nall_dsps <- map_df(dsp, ~read_excel(.x), .id = \"filename\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nNew names:\nNew names:\n• `` -> `...8`\n```\n:::\n\n```{.r .cell-code}\n# extract the date from the file name and create a new date column\nall_dsps <- all_dsps %>% \n  mutate(date = str_extract(filename, \"\\\\d{6}\"),\n         date = as.Date(paste0(\"01\", date), format = \"%d%m%Y\"))\n```\n:::\n\n\n\\\n\n### create uniform observation fields:\n\nThe ledgers vary throughout the years. In order to create a cohesive database, I needed to ensure like fields held the same naming conventions so they can be aggregated together down the road.\n\n| dispensary record fields: |                             |\n|---------------------------|-----------------------------|\n| **city**                  | **dba** (doing business as) |\n| **licensee**              | **license number**          |\n| **zip code**              |                             |\n\n[*adapted from \"[How to Use the coalesce() Function in dplyr](https://www.statology.org/dplyr-coalesce \"Statology\")\"*]{style=\"font-size: 80%;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use coalesce to combine like columns and override the N/A\nall_dsps<-  all_dsps %>% \n  mutate(dba = coalesce(DBA,`DOING BUSINESS AS`)) %>% \n  mutate(city = coalesce(CITY, City)) %>% \n  mutate(licensee = coalesce(Licensee, Licensees, LICENSEE, `Licensee Name` )) %>% \n  mutate(zip = coalesce(ZIP, Zip, ZipCode)) %>% \n  mutate(license_no = coalesce(`Lic #`,`LICENSE #`, `License Number`,LicenseNumber, license_no, `License #` )) \n\n #make a year column / variable\nall_dsps$year <- substr(all_dsps$date, 1,4)\n\n# write.csv(all_dsps, \"firstbatch.csv\")\n\n# select the relevant fields\nall_dsps <- all_dsps %>%\n  select(1, 26, 37:42)\n```\n:::\n\n\n\\\n\n### create uniform business names\n\nAnother inconsistent feature of the ledger includes many variations in the spelling of a business name. Throughout this project, I became vary familiar with the cannabis related business names and puns. I assume that if a similarly spelled business holds the same licence number, I can override that name to reflect the predominant naming convention. This tedious task was crucial in allowing me to match businesses that sell both medical and recreational products under different licenses.\n\n\n::: {.cell hash='counting_dispensaries_step1_cache/html/unnamed-chunk-4_1e4825af58519d803a3ea584fb43bcaa'}\n\n```{.r .cell-code}\n# same case\nall_dsps$dba <- toupper(all_dsps$dba) # DBA = \"Doing Business As\"\n\n# replace chaotic naming conventions\nall_dsps$dba <- gsub(\"3D CENTER\",\"3D CANNABIS CENTER\", all_dsps$dba)\nall_dsps$dba <- gsub(\"3D CANNABIS CENTER AND 3D DISPENSARY\",\"3D CANNABIS CENTER\", all_dsps$dba)\nall_dsps$dba <- gsub(\"3D DISPENSARY AND/OR 3D CANNABIS CENTER\",\"3D CANNABIS CENTER\", all_dsps$dba)\nall_dsps$dba <- gsub(\"21+\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\" LLC\",\"\", all_dsps$dba)\n\n# only remove LLC if nothing else follows\nall_dsps$dba <- gsub(\"LLC(?!.)$\", \"\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"&\",\"AND\", all_dsps$dba)\nall_dsps$dba <- gsub(\",\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\" INC\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\"INC\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\"'\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\"?S\",\"S\", all_dsps$dba)\nall_dsps$dba <- gsub(\"-\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\":\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\"COMPANY\",\"\", all_dsps$dba)\nall_dsps$dba <- gsub(\" CO(?!.)$\", \"\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"CO(?!.)$\", \"\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"CENTERS\",\"CENTER\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LLP(?!.)$\", \"\", all_dsps$dba, perl = TRUE)\nall_dsps$dba <- gsub(\"B.GOOD\",\"BGOOD\", all_dsps$dba)\nall_dsps$dba <- gsub(\"B.?GOOD\",\"BGOOD\", all_dsps$dba)\nall_dsps$dba <- gsub(\"B GOOD\",\"BGOOD\", all_dsps$dba)\nall_dsps$dba <- gsub(\"DEN REC\",\"DENREC\", all_dsps$dba)\nall_dsps$dba <- gsub(\"111\",\"1:11\", all_dsps$dba)\nall_dsps$dba <- gsub(\"111\",\"1:11\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ORGANICS\",\"ORGANIC\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ALPENGLOW BOTANICALS\",\"ALPENGLOW\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ALTITUDE ORGANIC CANNABIS\",\"ALTITUDE ORGANICS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ALTITUDE ORGANIC MEDICINE\",\"ALTITUDE ORGANICS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ANNIE?S DISPENSARY\",\"ANNIES DISPENSARY\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ASCEND CANNABIS.\",\"ASCEND CANNABIS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BACK TO THE GARDEN HEALTH AND WELLNESS CENTER\",\"BACK TO THE GARDEN\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BACK TO THE GARDENS\",\"BACK TO THE GARDEN\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BEAN WELLNESS GROUP II\",\"BEAN WELLNESS GROUP\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BEST LORADO CANNABIS\",\"BEST LORADO MEDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BEST LORADO MEDS ORG\",\"BEST LORADO MEDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BEST LORADO MEDS.ORG\",\"BEST LORADO MEDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BESTLORADOMEDS.ORG\",\"BEST LORADO MEDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BESTLORADOMEDS.ORG\",\"BEST LORADO MEDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BONFIRE CANNABIS MPANY\",\"BONFIRE CANNABIS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BOULDER MARIJUANA.\",\"BOULDER MARIJUANA\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BOULDER WELLNESS CANNABIS\",\"BOULDER WELLNESS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BRECKENRIDGE ORGANIX\",\"BRECKENRIDGE ORGANIC THERAPHY\", all_dsps$dba)\nall_dsps$dba <- gsub(\"BRECKENRIDGE CANNABIS CLUB\",\"BRECKENRIDGE ORGANIC THERAPHY\", all_dsps$dba)\nall_dsps$dba <- gsub(\"CLEARANCE CANNABIS.\",\"CLEARANCE CANNABIS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"CRESTED BUTTE WELLNESS CENTER\",\"CRESTED BUTTE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"CRESTED BUTTE ALTERNTIVE MEDICINE\",\"CRESTED BUTTE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"DO CRESTED BUTTE\",\"CRESTED BUTTE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"DOCTOR?S ORDERS\",\"DOCTORS ORDERS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ENLIGHTENED CARE PLUS\",\"ENLIGHTENED CARE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"FIFTY 2 EIGHTY\",\"FIFTY2EIGHTY\", all_dsps$dba)\nall_dsps$dba <- gsub(\"GM ENTERPRISE.\",\"GM ENTERPRISE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"GREEN DREAM CANNABIS\",\"GREEN DREAM\", all_dsps$dba)\nall_dsps$dba <- gsub(\"GREEN DREAM HEALTH SERVICES\",\"GREEN DREAM\", all_dsps$dba)\nall_dsps$dba <- gsub(\"GREEN GRASS CENTRAL CITY\",\"GREEN GRASS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"GREEN FIELDS\",\"GREENFIELDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HEADQUARTERS CANNABIS\",\"HEADQUARTERS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HEALING HOUSE DENVER\",\"HEALING HOUSE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HEALING HOUSE LAKEWOOD\",\"HEALING HOUSE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HELPING HANDS CANNABIS\",\"HELPINGHANDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HELPING HANDS HERBALS\",\"HELPINGHANDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HIGH COUNTRY HEALING 4\",\"HIGH COUNTRY HEALING\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HIGH COUNTRY HEALING 5\",\"HIGH COUNTRY HEALING\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HIGH COUNTRY HEALING 6\",\"HIGH COUNTRY HEALING\", all_dsps$dba)\nall_dsps$dba <- gsub(\"HIGH COUNTRY HEALING 8\",\"HIGH COUNTRY HEALING\", all_dsps$dba)\nall_dsps$dba <- gsub(\"IHC/SANTE\",\"IHC/SANTE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"IVITA WELLNESS\",\"IVITA\", all_dsps$dba)\nall_dsps$dba <- gsub(\"KIND LOVE / KL\",\"KIND LOVE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"KL\",\"KIND LOVE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"KIND LOVE EXPRESS\",\"KIND LOVE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"KIND MEDS\",\"KINDMEDS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LA NTES LNE BAR + DISPENSARY\",\"LANTES CLONE BAR AND DISPENSARY\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LANTES CLONE BAR + DISPENSARY\",\"LANTES CLONE BAR AND DISPENSARY\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LEAF ASPEN\",\"LEAF\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LEVELS IV.\",\"LEVELS IV\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LIGHTSHADE LABS\",\"LIGHTSHADE\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LIVWELL III\",\"LIVWELL\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LORADO HARVEST SUPPLY\",\"LORADO HARVEST\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LORADO HARVEST COMPANY\",\"LORADO HARVEST\", all_dsps$dba)\nall_dsps$dba <- gsub(\"LOTUS MEDICAL II\",\"LOTUS MEDICAL\", all_dsps$dba)\nall_dsps$dba <- gsub(\"MAGGIE?S FARM\",\"MAGGIES FARM\", all_dsps$dba)\nall_dsps$dba <- gsub(\"MAGNOLIA ROAD CANNABIS COMPANY\",\"MAGNOLIA ROAD\", all_dsps$dba)\nall_dsps$dba <- gsub(\"MAGNOLIA ROAD CANNABIS\",\"MAGNOLIA ROAD\", all_dsps$dba)\nall_dsps$dba <- gsub(\"MAGNOLIA ROAD CANNABIS\",\"MAGNOLIA ROAD\", all_dsps$dba)\n\n # removes all of the trailing names conventions\nall_dsps$dba <- gsub(\"MEDICINE MAN(?!.)$\",\"MEDICINE MAN\", all_dsps$dba, perl = TRUE )\nall_dsps$dba <- gsub(\"MMJ AMERICA(?!.$)\",\"MMJ AMERICA\", all_dsps$dba, perl = TRUE)\nall_dsps$dba <- gsub(\"MOUNTAIN MEDICINALS(?!.)$\",\"MOUNTAIN MEDICINALS\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"COMPASSIONATE CARE(?!.)$\",\"COMPASSIONATE CARE\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"MR. NICE GUYS\",\"MR NICE GUYS\", all_dsps$dba) #\nall_dsps$dba <- gsub(\"NATIVE ROOTS(?!.)$\",\"NATIVE ROOTS\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"NATURES HERBS(?!.)$\",\"NATURES HERBS\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"NATURES MEDICINE(?!.)$\",\"NATURES MEDICINE\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"NEW AMSTERDAM(?!.)$\",\"NEW AMSTERDAM\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"NORTHERN LIGHTS CANNABIS.\",\"NORTHERN LIGHTS CANNABIS\", all_dsps$dba) \nall_dsps$dba <- gsub(\"PATIENTS CHOICE(?!.)$\",\"PATIENTS CHOICE\", all_dsps$dba,  perl = TRUE) \nall_dsps$dba <- gsub(\"PEAK\",\"PEAK DISPENSARY\", all_dsps$dba) \nall_dsps$dba <- gsub(\"PINK HOUSE(?!.)$\",\"PINK HOUSE\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"PREFERRED ORGANIC(?!.)$\",\"PREFERRED ORGANIC\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"PRIMO\",\"PRIMO CANNABIS\", all_dsps$dba) \nall_dsps$dba <- gsub(\"PURE MARIJUANA DISPENSARY\",\"PURE DISPENSARY\", all_dsps$dba) #\nall_dsps$dba <- gsub(\"PURE MEDICAL DISPENSARY\",\"PURE DISPENSARY\", all_dsps$dba) \nall_dsps$dba <- gsub(\"PURE MEDICAL\",\"PURE DISPENSARY\", all_dsps$dba) \nall_dsps$dba <- gsub(\"RESERVE 1(?!.)$\",\"RESERVE 1\", all_dsps$dba, perl = TRUE) #\nall_dsps$dba <- gsub(\"RIVERROCK(?!.)$\",\"RIVERROCK\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"ROOTS RX\",\"ROOTSRX\", all_dsps$dba) \nall_dsps$dba <- gsub(\"SMOKEY?S\",\"SMOKEYS\", all_dsps$dba) \nall_dsps$dba <- gsub(\"SMOKED(?!.)$\",\"SMOKED\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"SMOKING GUN\",\"SMOKINGUN APOTHECARY\", all_dsps$dba) \nall_dsps$dba <- gsub(\"STAR BUDS\",\"STARBUDS\", all_dsps$dba) \nall_dsps$dba <- gsub(\"STEEL CITY MEDS(?!.)$\",\"STEEL CITY MEDS\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"STICKY BUDS(?!.)$\",\"STICKYBUDS\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"STICKY BUDS\",\"STICKYBUDS\", all_dsps$dba) \nall_dsps$dba <- gsub(\"TETRA HYDRO CENTER\",\"TETRAHYDROCENTER\", all_dsps$dba) \nall_dsps$dba <- gsub(\"THE CANARY?S SONG\",\"THE CANARYS SONG\", all_dsps$dba) \nall_dsps$dba <- gsub(\"THE CLINIC(?!.)$\",\"THE CLINIC\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"THE MEDICINE MAN\",\"MEDICINE MAN\", all_dsps$dba) \nall_dsps$dba <- gsub(\"THE SANCTUARY(?!.)$\",\"THE SANCTUARY\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"THE STONE\",\"THE STONE DISPENSARY\", all_dsps$dba) \nall_dsps$dba <- gsub(\"TRU CANNABIS(?!.)$\",\"TRU CANNABIS\", all_dsps$dba, perl = TRUE) \nall_dsps$dba <- gsub(\"TUMBLEWEEK DISPENSARY EDWARDS\",\"TUMBLEWEED DISPENSARY EDWARDS\", all_dsps$dba) \nall_dsps$dba <- gsub(\"UNITY RD. CANNABIS SHOP\",\"UNITY ROAD\", all_dsps$dba) \nall_dsps$dba <- gsub(\"WALKING RAVEN II\",\"WALKING RAVEN\", all_dsps$dba)\nall_dsps$dba <- gsub(\"WOLF PAC CANNABIS\",\"WOLFPAC CANNABIS\", all_dsps$dba)\nall_dsps$dba <- gsub(\"ALLGREENS\",\"CANNABIS MEDICAL TECHNOLOGY\", all_dsps$dba)\nall_dsps$dba <- gsub(\"3D CANNABIS CENTER AND 3D DISPENSARY\",\"3D CANNABIS CENTER\", all_dsps$dba)\n```\n:::\n\n\nThis process takes a few minutes, so I exported the data for manual review.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(all_dsps,\n          \"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dispensaries.csv\")\n```\n:::\n\n\n\\\n\n### identify and label dispensaries by their type\n\nThere are several type of licenses recorded by the Colorado Department of Revenue. NIMBY focuses on recreational and medical dispensaries, so those are the businesses I have identified based on the license number as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncleaned_dsps <- all_dsps\n\ncleaned_dsps <- cleaned_dsps %>%\n  mutate(type = if_else(startsWith(license_no, \"402R\"), \"retail\",\n                        if_else(startsWith(license_no, \"402-\"), \"medical\",\n                                \"other\")))\n\n#remove the testing facilities, growers and transporters\ndsps <-  cleaned_dsps %>% \n  filter(type == \"medical\" | type == \"retail\")\n\ndsps$dba <- ifelse(dsps$dba == \"NONE\", NA, dsps$dba) # change the None's to NAs\ndsps$zip<-  substr(dsps$zip, start = 1, stop = 5) # remove trailing numbers\n```\n:::\n\n\n\\\n\n### find missing business names\n\n[*adapted from \"[Dplyr solution using slice and group](https://stackoverflow.com/questions/52465215/dplyr-solution-using-slice-and-group \"StackOverflow\")\"*]{style=\"font-size: 80%;\"}\n\nAlong with variations in spelling, some years the \"doing business as\" field was left blank. Assuming the license number is only assigned to the same business identified in another time period, I can use that information to create a master list of business names to match against.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# select all business names and license numbers\ndsps_list <-dsps  %>% \n  select(dba, license_no) #\n\n# remove the missing fields, coming for those later\ndsps_list <- as.data.frame(na.omit(dsps_list)) # remove na\n\n# keep only the first instance (since their are multiple naming conventions \n# for each licensee)\ndsps_list <- dsps_list %>%\n  group_by(license_no) %>%\n  slice(1)\n\n# merge the business names by the license number \n# all.x = TRUE argument means include all rows from dsps \n # even if there is no matching row in dsps_list\ndsps_merge <- merge(dsps, dsps_list, by = \"license_no\", all.x= TRUE)\n\n#update the \"doing business as\" column, replace the N/As\ndsps_merge$dba <- coalesce(dsps_merge$dba.y, dsps_merge$dba.x)\n\n# if that still doesn't work, update the umatched licence numbers with the licensee name\ndsps_merge$dba <- coalesce(dsps_merge$dba, dsps_merge$licensee)\n\n# remove the duplicated columns\ndsps_merge <-  dsps_merge %>% \n  select(\n    license_no,\n    dba,\n    city,\n    zip,\n    type,\n    date,\n    year)\n```\n:::\n\n\nHere is the new cleaned list of businesses with limited null fields!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dsps_merge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  license_no                         dba   city   zip    type       date year\n1  402-00001 CANNABIS MEDICAL TECHNOLOGY Denver 80204 medical 2020-08-01 2020\n2  402-00001 CANNABIS MEDICAL TECHNOLOGY Denver 80204 medical 2016-02-01 2016\n3  402-00001 CANNABIS MEDICAL TECHNOLOGY Denver 80204 medical 2020-12-01 2020\n4  402-00001 CANNABIS MEDICAL TECHNOLOGY Denver 80204 medical 2015-04-01 2015\n5  402-00001 CANNABIS MEDICAL TECHNOLOGY Denver 80204 medical 2013-11-01 2013\n6  402-00001 CANNABIS MEDICAL TECHNOLOGY Denver 80204 medical 2016-05-01 2016\n```\n:::\n:::\n\n\n\\\n\n### find the missing zip codes\n\nThis same issue occurs with the zip code field, I apply the same technique used to find missing businesses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndsps_zips <-dsps_merge  %>% \n  select(zip, city, license_no) # add type for a distinct list\n\ndsps_zips <- as.data.frame(na.omit(dsps_zips)) # remove na\n\n# keep only the main/  first instance\ndsps_zips<- dsps_zips %>%\n  group_by(license_no) %>%\n  slice(1)\n\n#save this for creating per capita variables\nwrite.csv(dsps_zips,\n          \"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dsps_zips.csv\")  \n\n# xlook-up R style: overide the na's with the matches, same as a left_join\ndsps_merge_zips <- merge(dsps_merge, dsps_zips, by = \"license_no\", all.x= TRUE)\ndsps_merge_zips$zip <- coalesce(dsps_merge_zips$zip.x, dsps_merge_zips$zip.y)\n\n# remove the duplicated columns, and update the main data frame\nstorelist<-  dsps_merge_zips %>% \n  select(\n    license_no,\n    dba,\n    type,\n    city = city.x,\n    zip,\n    date,\n    year\n  )\n\n# export for manual review if needed\nwrite.csv(storelist,\n          \"~/gvsu/winter 23/CIS 635/NIMBY/cleaning/counting_dispensaries/dps_data_cleaned/dispensaries.csv\")\n```\n:::\n\n\n\\\n\n### find dispensaries that are both medical and recreational sellers\n\n[*adapted from \"[Join Data with dplyr in R: 6 Examples](https://www.youtube.com/watch?v=Yg-pNqzDuN4 \"Statistics Globe Youtube Channel\")\"*]{style=\"font-size: 80%;\"}\n\nThis is where my methodology differs drastically from the original paper. NIMBY matches the physical locations to determine which licensees are both medical and recreational (or retail).\n\n> *Our algorithm utilizes a customized cross-walk that identifies licenses assigned to the same address (e.g. matches 250 W. Colfax to 250 West Colfax) and identifies the co-location of medical and recreational based on the name of the business holding the licenses (since recreational licensees were granted only to the license holders of medical license).*\n>\n> [@brinkman2017]\n\n![](images/classifying.png){width=\"245\"}\n\nMy approach to creating three buckets of dispensaries:\n\n-   divide the data into two sets; \"medical\" and \"retail\" ,\n\n-   cross compare the lists, and identify where a business name appears in the \"both\" categories during the same time period\n\n-   remove the collocations from the retail and medical businesses\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# divide this into two new dataframes, one for medical, one for recreational\nmed_dsp <- filter(storelist, type == \"medical\")\nrec_dsp <- filter(storelist, type == \"retail\")\n\n# find the business that have the same name, city and date\n\n# with two different names, so this is my best estimate\nboth_dsp <- merge(med_dsp, rec_dsp, by = c(\"dba\", \"date\"))%>% \n  select(\n    dba,\n    \"city\" = `city.x`,\n    date,\n    \"year\" = `year.x`,\n    \"zip\" = `zip.x`)\nboth_dsp$type <-  \"both\" \n\n# remove duplicates\nboth_dsp <- both_dsp %>%  distinct(dba, date, type, .keep_all = TRUE)\n\n# removes the \"both\" businesses from the respective dataframes\nmed_only <- med_dsp %>%\n  anti_join(both_dsp, by = c(\"dba\", \"date\"))\nmed_only$type <-  \"med_only\" # label the type\n\nrec_only <- rec_dsp %>%\n  anti_join(both_dsp, by = c(\"dba\", \"date\"))\nrec_only$type <-  \"rec_only\" # label the type\n\n\n# combine the dataframes together (like if i were to copy and paste it at the bottom of an excel file)\nstorelist_cleaned <- bind_rows(med_only,both_dsp, rec_only )\nstorelist_cleaned <- storelist_cleaned %>%  distinct(dba, type, date, zip, .keep_all = TRUE)\n\nwrite.csv(storelist_cleaned,\n          \"dispensary_types_defined.csv\")\n```\n:::\n\n\n### Graph the Results for Analysis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize the results\n# dsps_growth$date <-  ymd(dsps$date)\n\n# dsps_growth$type <- factor(dsps_growth$type,\n#                             levels=c(\"med_only\", \"both\", \"rec_only\"))\n\n# dsps_growth$type <- factor(dsps_growth$type, levels = rev(c(\"med_only\", \"both\", \"rec_only\")))\n\ndsps_growth <- storelist_cleaned %>% \n  filter( year < 2017) %>% \n  select(type,\n         dba,\n         date) %>%\n  group_by(date, type) %>% \n  summarise(num_licenses = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# create a graph\nfig1.b <- ggplot(dsps_growth, aes(x = date, y = num_licenses, \n                                  fill = factor(type))) + \n  \n   geom_area(alpha=0.6 , size=.5, colour=\"white\")+\n             scale_fill_manual(values =c(\"#B41876\",\"#23CB7F\", \"#1679A6\")) +\n                               \n  \n   ylim(0, 800) +\n   geom_vline(xintercept = as.Date(\"2014-01-01\"), linetype = \"dashed\") +\n  \n  geom_text(x = as.Date(\"2014-09-01\") + 30,\n            y = 750, label = \"first recreational sales\",\n            family = \"Times New Roman\") +\n  \n  annotate(\"text\", x = as.Date(\"2015-01-01\"), y = 500, label = \"both\") +\n  annotate(\"text\", x = as.Date(\"2015-01-01\"), y = 300, label = \"medical only\") +\n  annotate(\"text\", x = as.Date(\"2015-01-01\"), y = 50, label = \"rec only\") +\n\n  \n  labs(y=\"Number of Stores\",\n       x =\"Year\",\n       color = \"Type\",\n       title = \"Dispensary Growth\",\n       subtitle = \"State of Colorado 2013–2016\",\n       hjust = 0, size = 5) +\n  \n  theme_minimal() +\n    theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n```{.r .cell-code}\nfig1.b\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](counting_dispensaries_step1_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"images/dsp_growth.png\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a sample dataset\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}